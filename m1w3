1. What are some traits of a good software developer?

 A good software developer is someone that is approachable, not just personally, but also coding-wise. They are not presumptive, nor attached to any code in particular. They see code not only as a means to create projects, but also as a means to communicate with the people who come after them.
 
 As a software developer, I want to be someone who is not code focused. Code is the language through which we communicate, but it is not the words we speak. By that I mean that it is simply the vehicle we use to articulate what we are actually trying to say. I want to be soeone who can be as clear with my code as I can be with my words. A good way to improve that relationship with code is to keep trying new ways to articulate methods, etc... Like with words, it is good to practice many ways to say something so that whenn someone has a preference for learning, it is not an entirely new method of 'speaking.' A good habit to get into will be to revisit old code, and try and do the same thing in a different way. I think the between mods breaks will be a good time to look back over old code, and not just remmeber and learn from retrospect, but also to look at it with the eyes of communicating in a different way.
 
2. Habits:

 One thing I have been working on is my ability to focus on big-picture programming instead of getting caught in writing method after method. A way that I have been conditioning myself to become more aware of this during the Futbol project has been by thinking about integration and abstraction after writing every method. This has led me to understand more how the just completed method fits into the whole project, instead of tunnelling into just what it accomplishes in that moment. Another way to enforce this that I can pick up would be to enforce poms more regularly around methods- just having that break before diving back in can really excentuate the break, and prevent leaping too far ahead of the path.
